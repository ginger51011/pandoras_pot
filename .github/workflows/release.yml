name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Sanity tests
        run: cargo test --target ${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Create archive
        shell: bash
        run: |
          binary_name="pandoras_pot"
          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          result="$dirname.tar.gz"
          tar -czf "$result" "$dirname"
          shasum -a 256 "$result" > "$result.sha256"
          echo "RESULT=$result" >> $GITHUB_ENV
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pandoras_pot-${{ env.VERSION }}-${{ matrix.target }}
          path: |
            ${{ env.RESULT }}
            ${{ env.RESULT }}.sha256
          retention-days: 1
          compression-level: 0 # no compression, already compressed
  create-release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          # Name not specified: Download all from this workflow run
          path: artifacts/
          pattern: pandoras_pot-*
          merge-multiple: true
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: artifacts/*
